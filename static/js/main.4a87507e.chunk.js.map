{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h2/Affair.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","messageWrapper","avatar","src","alt","message","name","content","time","messageData","HW1","Affair","wrapper","affair","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","buttonsWrapper","allBtn","setFilter","highBtn","middleBtn","lowBtn","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","GreetingContainer","users","addUserCallback","setName","e","alert","HW3","setUsers","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4a87507e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2Fuva\",\"avatar\":\"Message_avatar__3lOsU\",\"message\":\"Message_message__3AU61\",\"time\":\"Message_time__15tBf\",\"name\":\"Message_name__FxEFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__Hk_4K\",\"buttonsWrapper\":\"Affairs_buttonsWrapper__eaoAO\",\"allBtn\":\"Affairs_allBtn__1YriE\",\"highBtn\":\"Affairs_highBtn__1Z0TC\",\"middleBtn\":\"Affairs_middleBtn__wJ312\",\"lowBtn\":\"Affairs_lowBtn__2DciK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affair_wrapper__1_VIW\",\"name\":\"Affair_name__111AP\",\"button\":\"Affair_button__3x70C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2jjpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1ebnH\",\"error\":\"Greeting_error__2tdC1\"};","import React from \"react\";\r\nimport {TaskType} from \"./HW1\";\r\nimport style from './Message.module.css';\r\n\r\nfunction Message(props: TaskType) {\r\n    return (\r\n        <div className={style.messageWrapper}>\r\n            <img className={style.avatar} src={props.avatar} alt=\"Avatar\"/>\r\n            <div className={style.message}>\r\n                <span className={style.name}>{props.name}</span>\r\n                <p className={style.content}>{props.message}</p>\r\n                <span className={style.time}>{props.time}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nexport type TaskType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst messageData: TaskType = {\r\n    avatar: \"https://www.vikids.ru/images/default_avatar.png?avatar_cached_at=1562752082\",\r\n    name: \"Ivan\",\r\n    message: \"hello hello hello hello hello\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport style from \"./Affair.module.css\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id:number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.name}>\r\n                <span>{props.affair.name}</span>\r\n            </div>\r\n            <button className={style.button} onClick={deleteCallback}>remove</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport style from './Affairs.module.css'\r\nimport {FilterType, AffairType} from \"./HW2\";\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter:FilterType) => void\r\n    deleteAffairCallback: (_id:number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")};\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n\r\n            {mappedAffairs}\r\n\r\n            <div className={style.buttonsWrapper}>\r\n                <button className={style.allBtn} onClick={setAll}>All</button>\r\n                <button className={style.highBtn} onClick={setHigh}>High</button>\r\n                <button className={style.middleBtn} onClick={setMiddle}>Middle</button>\r\n                <button className={style.lowBtn} onClick={setLow}>Low</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === \"all\") return affairs;\r\n    else return affairs.filter(a => a.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState <Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: any // need to fix any\r\n    setNameCallback: any // need to fix any\r\n    addUser: any // need to fix any\r\n    error: any // need to fix any\r\n    totalUsers: any // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error; // need to fix with (?:)\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: any // need to fix any\r\n    addUserCallback: any // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<any>(\"\"); // need to fix any\r\n    const [error, setError] = useState<any>(\"\"); // need to fix any\r\n\r\n    const setNameCallback = (e: any) => { // need to fix any\r\n        setName(\"\"); // need to fix\r\n    };\r\n    const addUser = () => {\r\n        alert(`Hello  !`); // need to fix\r\n    };\r\n\r\n    const totalUsers = 0; // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: any // need to fix any\r\n    name: any // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<any>([]); // need to fix any\r\n\r\n    const addUserCallback = (name: any) => { // need to fix any\r\n        setUsers([]); // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}