{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h2/Affair.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","messageWrapper","avatar","src","alt","message","name","content","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","wrapper","affair","priority","button","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","buttonsWrapper","allBtn","setFilter","highBtn","middleBtn","lowBtn","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","label","e","currentTarget","value","superLabel","Greeting","setNameCallback","addUser","totalUsers","users","inputClass","success","usersData","u","usersWr","userData","userDataTitle","userDataContent","input","placeholder","totalCount","GreetingContainer","addUserCallback","setName","setError","length","trim","alert","v1","HW3","setUsers","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","textInput","blue","deleteButton","checkBoxWr","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a53c4795.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__WTblo\",\"input\":\"Greeting_input__1prz7\",\"totalCount\":\"Greeting_totalCount__3WiDz\",\"data\":\"Greeting_data__20AUG\",\"usersWr\":\"Greeting_usersWr__5GcCU\",\"userData\":\"Greeting_userData__1tHsd\",\"userDataTitle\":\"Greeting_userDataTitle__24gyx\",\"userDataContent\":\"Greeting_userDataContent__2cDcT\",\"error\":\"Greeting_error__2tdC1\",\"errorType\":\"Greeting_errorType__2JBP0\",\"label\":\"Greeting_label__20hjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3hkVW\",\"textInput\":\"HW4_textInput__2ueNf\",\"column\":\"HW4_column__3c2xA\",\"deleteButton\":\"HW4_deleteButton__2y2nB\",\"checkBoxWr\":\"HW4_checkBoxWr__3KlLx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__2Fuva\",\"avatar\":\"Message_avatar__3lOsU\",\"message\":\"Message_message__3AU61\",\"time\":\"Message_time__15tBf\",\"name\":\"Message_name__FxEFJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__Hk_4K\",\"buttonsWrapper\":\"Affairs_buttonsWrapper__eaoAO\",\"allBtn\":\"Affairs_allBtn__1YriE\",\"highBtn\":\"Affairs_highBtn__1Z0TC\",\"middleBtn\":\"Affairs_middleBtn__wJ312\",\"lowBtn\":\"Affairs_lowBtn__2DciK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2u_kJ\",\"errorInput\":\"SuperInputText_errorInput__24Pm0\",\"superLabel\":\"SuperInputText_superLabel__iwihz\",\"error\":\"SuperInputText_error__3acEh\",\"label\":\"SuperInputText_label__B5nWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affair_wrapper__1_VIW\",\"name\":\"Affair_name__111AP\",\"button\":\"Affair_button__3x70C\",\"priority\":\"Affair_priority__1wPXL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__13vb7\",\"spanClassName\":\"SuperCheckbox_spanClassName__16jdM\",\"label\":\"SuperCheckbox_label__1qPgB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1gEbm\",\"red\":\"SuperButton_red__1_o3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2jjpI\"};","import React from \"react\";\r\nimport {TaskType} from \"./HW1\";\r\nimport style from './Message.module.css';\r\n\r\nfunction Message(props: TaskType) {\r\n    return (\r\n        <div className={style.messageWrapper}>\r\n            <img className={style.avatar} src={props.avatar} alt=\"Avatar\"/>\r\n            <div className={style.message}>\r\n                <span className={style.name}>{props.name}</span>\r\n                <p className={style.content}>{props.message}</p>\r\n                <span className={style.time}>{props.time}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nexport type TaskType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst messageData: TaskType = {\r\n    avatar: \"https://www.vikids.ru/images/default_avatar.png?avatar_cached_at=1562752082\",\r\n    name: \"Ivan\",\r\n    message: \"hello hello hello hello hello\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : \"\"} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={`${s.default} ${finalClassName}`}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport style from \"./Affair.module.css\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    };\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.name}>\r\n                <span>{props.affair.name}</span>\r\n                <span className={style.priority}>({props.affair.priority})</span>\r\n            </div>\r\n            <SuperButton className={style.button} onClick={deleteCallback}>remove</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport style from './Affairs.module.css'\r\nimport {FilterType, AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter:FilterType) => void\r\n    deleteAffairCallback: (_id:number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter(\"all\")};\r\n    const setHigh = () => {props.setFilter(\"high\")};\r\n    const setMiddle = () => {props.setFilter(\"middle\")};\r\n    const setLow = () => {props.setFilter(\"low\")};\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n\r\n            {mappedAffairs}\r\n\r\n            <div className={style.buttonsWrapper}>\r\n                <SuperButton className={style.allBtn} onClick={setAll}>All</SuperButton>\r\n                <SuperButton className={style.highBtn} onClick={setHigh}>High</SuperButton>\r\n                <SuperButton className={style.middleBtn} onClick={setMiddle}>Middle</SuperButton>\r\n                <SuperButton className={style.lowBtn} onClick={setLow}>Low</SuperButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"high\" | \"low\" | \"middle\"\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === \"all\") return affairs;\r\n    else return affairs.filter(a => a.priority === filter);\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n\r\n    const [affairs, setAffairs] = useState <Array<AffairType>>(defaultAffairs);\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error ? s.error : \"\"} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : \"\"} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\r\n    return (\r\n        <>\r\n            <label className={s.label}>\r\n                <input\r\n                    type={\"text\"}\r\n                    onChange={onChangeCallback}\r\n                    onKeyPress={onKeyPressCallback}\r\n                    className={finalInputClassName}\r\n\r\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                />\r\n                {error && <span className={`${s.superLabel} ${finalSpanClassName}`}>{error}</span>}\r\n            </label>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\nimport {UserType} from \"./HW3\";\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e:ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n    users: Array<UserType>\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, users} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.success;\r\n    const usersData = users.map(u => {\r\n        return (\r\n            <div className={s.usersWr} key={u._id}>\r\n                <div className={s.userData}><span className={s.userDataTitle}>public ID:</span><span className={s.userDataContent}>{u._id}</span></div>\r\n                <div className={s.userData}><span className={s.userDataTitle}>User name:</span><span className={s.userDataContent}>{u.name}</span></div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.input}>\r\n                <SuperInputText value={name} onChange={setNameCallback} className={inputClass} error={error} placeholder=\"Enter your name\"/>\r\n                {/*<span className={s.errorType}>{error}</span>*/}\r\n                <SuperButton onClick={addUser}>add</SuperButton>\r\n                <span className={s.totalCount}>{totalUsers}</span>\r\n            </div>\r\n            <div className={s.data}>\r\n                <h5>Users list</h5>\r\n                {usersData}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {v1} from \"uuid\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name:string, _id:string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n        setError(\"\")\r\n    };\r\n    const addUser = () => {\r\n        if(name.trim()) {\r\n            alert(`Hello  ${name}!`);\r\n            addUserCallback(name, v1());\r\n            setName(\"\");\r\n        } else {\r\n            alert(`Не, так не пойдет, надо что то написать`);\r\n            setError(\"Поле не должно быть пустым\")\r\n            setName(\"\");\r\n        }\r\n    };\r\n\r\n    const totalUsers = users.length;\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            users={users}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState <Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string, _id: string) => {\r\n        setUsers([...users, {_id, name}]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"заполните поле\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n            setText(\"\")\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    placeholder=\"Введите текст\"\r\n                    className={`${s.textInput} ${s.blue}`} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    className={s.deleteButton}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <div className={s.checkBoxWr}>\r\n                    <SuperCheckbox\r\n                        checked={checked}\r\n                        onChangeChecked={setChecked}\r\n                        className={s.checkbox}\r\n                    >\r\n                        запомнить меня {/*// этот текст попадёт в children*/}\r\n                    </SuperCheckbox>\r\n\r\n                    {/*// onChange тоже должен работать*/}\r\n                    <SuperCheckbox checked={checked}\r\n                                   onChange={testOnChange}\r\n                                   className={s.checkbox}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}